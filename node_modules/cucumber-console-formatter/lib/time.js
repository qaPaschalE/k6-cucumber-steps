"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toFormattedDate = exports.toMilliseconds = exports.toNumber = exports.MILLISECONDS_IN_SECOND = exports.dateToFilename = void 0;
function dateToFilename(date) {
    const filename = date.toISOString().replace(/\./g, '-').replace(/:/g, '-').trim();
    return filename;
}
exports.dateToFilename = dateToFilename;
// part of the below code is inspired from the cucumber-js source code
exports.MILLISECONDS_IN_SECOND = 1e3;
function toNumber(x) {
    return typeof x === 'number' ? x : x.toNumber();
}
exports.toNumber = toNumber;
function toMilliseconds(timestamp) {
    const now = Date.now();
    return (timestamp === null || timestamp === void 0 ? void 0 : timestamp.seconds) ? toNumber(timestamp.seconds) * exports.MILLISECONDS_IN_SECOND : now;
}
exports.toMilliseconds = toMilliseconds;
function toFormattedDate(timestamp) {
    const timestampDateTime = new Date(toMilliseconds(timestamp));
    const year = timestampDateTime.toLocaleString('default', {
        year: 'numeric',
    });
    const month = timestampDateTime.toLocaleString('default', {
        month: '2-digit',
    });
    const day = timestampDateTime.toLocaleString('default', {
        day: '2-digit',
    });
    const time = timestampDateTime.toLocaleTimeString('default', {
        hour: '2-digit',
        minute: '2-digit',
        hour12: false,
    });
    return `${year}/${month}/${day} ${time}`;
}
exports.toFormattedDate = toFormattedDate;
